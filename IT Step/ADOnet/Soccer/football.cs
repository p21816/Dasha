#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



public partial class Football : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Определения метода расширяемости
  partial void OnCreated();
  partial void InsertCompetition(Competition instance);
  partial void UpdateCompetition(Competition instance);
  partial void DeleteCompetition(Competition instance);
  partial void InsertCompetitionWinners(CompetitionWinners instance);
  partial void UpdateCompetitionWinners(CompetitionWinners instance);
  partial void DeleteCompetitionWinners(CompetitionWinners instance);
  partial void InsertCountry(Country instance);
  partial void UpdateCountry(Country instance);
  partial void DeleteCountry(Country instance);
  partial void InsertFootballClub(FootballClub instance);
  partial void UpdateFootballClub(FootballClub instance);
  partial void DeleteFootballClub(FootballClub instance);
  partial void InsertInjuryHistory(InjuryHistory instance);
  partial void UpdateInjuryHistory(InjuryHistory instance);
  partial void DeleteInjuryHistory(InjuryHistory instance);
  partial void InsertPlayer(Player instance);
  partial void UpdatePlayer(Player instance);
  partial void DeletePlayer(Player instance);
  partial void InsertTransfersHistory(TransfersHistory instance);
  partial void UpdateTransfersHistory(TransfersHistory instance);
  partial void DeleteTransfersHistory(TransfersHistory instance);
  #endregion
	
	public Football(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public Football(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public Football(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public Football(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Competition> Competition
	{
		get
		{
			return this.GetTable<Competition>();
		}
	}
	
	public System.Data.Linq.Table<CompetitionWinners> CompetitionWinners
	{
		get
		{
			return this.GetTable<CompetitionWinners>();
		}
	}
	
	public System.Data.Linq.Table<Country> Country
	{
		get
		{
			return this.GetTable<Country>();
		}
	}
	
	public System.Data.Linq.Table<FootballClub> FootballClub
	{
		get
		{
			return this.GetTable<FootballClub>();
		}
	}
	
	public System.Data.Linq.Table<Infirmary> Infirmary
	{
		get
		{
			return this.GetTable<Infirmary>();
		}
	}
	
	public System.Data.Linq.Table<InjuryHistory> InjuryHistory
	{
		get
		{
			return this.GetTable<InjuryHistory>();
		}
	}
	
	public System.Data.Linq.Table<Player> Player
	{
		get
		{
			return this.GetTable<Player>();
		}
	}
	
	public System.Data.Linq.Table<TransfersHistory> TransfersHistory
	{
		get
		{
			return this.GetTable<TransfersHistory>();
		}
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fn_footballTeam", IsComposable=true)]
	public IQueryable<Fn_footballTeamResult> Fn_footballTeam([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string team)
	{
		return this.CreateMethodCallQuery<Fn_footballTeamResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), team);
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Competition")]
public partial class Competition : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
	private string _Img;
	
	private EntitySet<CompetitionWinners> _CompetitionWinners;
	
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnImgChanging(string value);
    partial void OnImgChanged();
    #endregion
	
	public Competition()
	{
		this._CompetitionWinners = new EntitySet<CompetitionWinners>(new Action<CompetitionWinners>(this.attach_CompetitionWinners), new Action<CompetitionWinners>(this.detach_CompetitionWinners));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id", Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="name", Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="img", Storage="_Img", DbType="NVarChar(100)")]
	public string Img
	{
		get
		{
			return this._Img;
		}
		set
		{
			if ((this._Img != value))
			{
				this.OnImgChanging(value);
				this.SendPropertyChanging();
				this._Img = value;
				this.SendPropertyChanged("Img");
				this.OnImgChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="fk_competition", Storage="_CompetitionWinners", ThisKey="Id", OtherKey="IdCompetition", DeleteRule="NO ACTION")]
	public EntitySet<CompetitionWinners> CompetitionWinners
	{
		get
		{
			return this._CompetitionWinners;
		}
		set
		{
			this._CompetitionWinners.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_CompetitionWinners(CompetitionWinners entity)
	{
		this.SendPropertyChanging();
		entity.Competition = this;
	}
	
	private void detach_CompetitionWinners(CompetitionWinners entity)
	{
		this.SendPropertyChanging();
		entity.Competition = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompetitionWinners")]
public partial class CompetitionWinners : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _IdCompetition;
	
	private System.DateTime _FinalDate;
	
	private int _IdWinner;
	
	private EntityRef<Competition> _Competition;
	
	private EntityRef<FootballClub> _FootballClub;
	
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdCompetitionChanging(int value);
    partial void OnIdCompetitionChanged();
    partial void OnFinalDateChanging(System.DateTime value);
    partial void OnFinalDateChanged();
    partial void OnIdWinnerChanging(int value);
    partial void OnIdWinnerChanged();
    #endregion
	
	public CompetitionWinners()
	{
		this._Competition = default(EntityRef<Competition>);
		this._FootballClub = default(EntityRef<FootballClub>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id", Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="idCompetition", Storage="_IdCompetition", DbType="Int NOT NULL")]
	public int IdCompetition
	{
		get
		{
			return this._IdCompetition;
		}
		set
		{
			if ((this._IdCompetition != value))
			{
				this.OnIdCompetitionChanging(value);
				this.SendPropertyChanging();
				this._IdCompetition = value;
				this.SendPropertyChanged("IdCompetition");
				this.OnIdCompetitionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="finalDate", Storage="_FinalDate", DbType="Date NOT NULL")]
	public System.DateTime FinalDate
	{
		get
		{
			return this._FinalDate;
		}
		set
		{
			if ((this._FinalDate != value))
			{
				this.OnFinalDateChanging(value);
				this.SendPropertyChanging();
				this._FinalDate = value;
				this.SendPropertyChanged("FinalDate");
				this.OnFinalDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="idWinner", Storage="_IdWinner", DbType="Int NOT NULL")]
	public int IdWinner
	{
		get
		{
			return this._IdWinner;
		}
		set
		{
			if ((this._IdWinner != value))
			{
				this.OnIdWinnerChanging(value);
				this.SendPropertyChanging();
				this._IdWinner = value;
				this.SendPropertyChanged("IdWinner");
				this.OnIdWinnerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="fk_competition", Storage="_Competition", ThisKey="IdCompetition", OtherKey="Id", IsForeignKey=true)]
	public Competition Competition
	{
		get
		{
			return this._Competition.Entity;
		}
		set
		{
			Competition previousValue = this._Competition.Entity;
			if (((previousValue != value) 
						|| (this._Competition.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Competition.Entity = null;
					previousValue.CompetitionWinners.Remove(this);
				}
				this._Competition.Entity = value;
				if ((value != null))
				{
					value.CompetitionWinners.Add(this);
					this._IdCompetition = value.Id;
				}
				else
				{
					this._IdCompetition = default(int);
				}
				this.SendPropertyChanged("Competition");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="fk_winner", Storage="_FootballClub", ThisKey="IdWinner", OtherKey="Id", IsForeignKey=true)]
	public FootballClub FootballClub
	{
		get
		{
			return this._FootballClub.Entity;
		}
		set
		{
			FootballClub previousValue = this._FootballClub.Entity;
			if (((previousValue != value) 
						|| (this._FootballClub.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._FootballClub.Entity = null;
					previousValue.CompetitionWinners.Remove(this);
				}
				this._FootballClub.Entity = value;
				if ((value != null))
				{
					value.CompetitionWinners.Add(this);
					this._IdWinner = value.Id;
				}
				else
				{
					this._IdWinner = default(int);
				}
				this.SendPropertyChanged("FootballClub");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Country")]
public partial class Country : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
	private string _Img;
	
	private EntitySet<Player> _Player;
	
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnImgChanging(string value);
    partial void OnImgChanged();
    #endregion
	
	public Country()
	{
		this._Player = new EntitySet<Player>(new Action<Player>(this.attach_Player), new Action<Player>(this.detach_Player));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id", Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="name", Storage="_Name", DbType="NVarChar(100)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="img", Storage="_Img", DbType="NVarChar(100)")]
	public string Img
	{
		get
		{
			return this._Img;
		}
		set
		{
			if ((this._Img != value))
			{
				this.OnImgChanging(value);
				this.SendPropertyChanging();
				this._Img = value;
				this.SendPropertyChanged("Img");
				this.OnImgChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="fk_country", Storage="_Player", ThisKey="Id", OtherKey="IdCountry", DeleteRule="NO ACTION")]
	public EntitySet<Player> Player
	{
		get
		{
			return this._Player;
		}
		set
		{
			this._Player.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Player(Player entity)
	{
		this.SendPropertyChanging();
		entity.Country = this;
	}
	
	private void detach_Player(Player entity)
	{
		this.SendPropertyChanging();
		entity.Country = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FootballClub")]
public partial class FootballClub : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
	private string _Stadium;
	
	private System.DateTime _Foundation;
	
	private string _Country;
	
	private string _City;
	
	private string _Img;
	
	private EntitySet<Player> _Player;
	
	private EntitySet<TransfersHistory> _TransfersHistory;
	
	private EntitySet<TransfersHistory> _ToClub;
	
	private EntitySet<CompetitionWinners> _CompetitionWinners;
	
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStadiumChanging(string value);
    partial void OnStadiumChanged();
    partial void OnFoundationChanging(System.DateTime value);
    partial void OnFoundationChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnImgChanging(string value);
    partial void OnImgChanged();
    #endregion
	
	public FootballClub()
	{
		this._Player = new EntitySet<Player>(new Action<Player>(this.attach_Player), new Action<Player>(this.detach_Player));
		this._TransfersHistory = new EntitySet<TransfersHistory>(new Action<TransfersHistory>(this.attach_TransfersHistory), new Action<TransfersHistory>(this.detach_TransfersHistory));
		this._ToClub = new EntitySet<TransfersHistory>(new Action<TransfersHistory>(this.attach_ToClub), new Action<TransfersHistory>(this.detach_ToClub));
		this._CompetitionWinners = new EntitySet<CompetitionWinners>(new Action<CompetitionWinners>(this.attach_CompetitionWinners), new Action<CompetitionWinners>(this.detach_CompetitionWinners));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id", Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="name", Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="stadium", Storage="_Stadium", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string Stadium
	{
		get
		{
			return this._Stadium;
		}
		set
		{
			if ((this._Stadium != value))
			{
				this.OnStadiumChanging(value);
				this.SendPropertyChanging();
				this._Stadium = value;
				this.SendPropertyChanged("Stadium");
				this.OnStadiumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="foundation", Storage="_Foundation", DbType="Date NOT NULL")]
	public System.DateTime Foundation
	{
		get
		{
			return this._Foundation;
		}
		set
		{
			if ((this._Foundation != value))
			{
				this.OnFoundationChanging(value);
				this.SendPropertyChanging();
				this._Foundation = value;
				this.SendPropertyChanged("Foundation");
				this.OnFoundationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="country", Storage="_Country", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string Country
	{
		get
		{
			return this._Country;
		}
		set
		{
			if ((this._Country != value))
			{
				this.OnCountryChanging(value);
				this.SendPropertyChanging();
				this._Country = value;
				this.SendPropertyChanged("Country");
				this.OnCountryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="city", Storage="_City", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string City
	{
		get
		{
			return this._City;
		}
		set
		{
			if ((this._City != value))
			{
				this.OnCityChanging(value);
				this.SendPropertyChanging();
				this._City = value;
				this.SendPropertyChanged("City");
				this.OnCityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="img", Storage="_Img", DbType="NVarChar(100)")]
	public string Img
	{
		get
		{
			return this._Img;
		}
		set
		{
			if ((this._Img != value))
			{
				this.OnImgChanging(value);
				this.SendPropertyChanging();
				this._Img = value;
				this.SendPropertyChanged("Img");
				this.OnImgChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="fk_club", Storage="_Player", ThisKey="Id", OtherKey="IdClub", DeleteRule="NO ACTION")]
	public EntitySet<Player> Player
	{
		get
		{
			return this._Player;
		}
		set
		{
			this._Player.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="fk_fromClub", Storage="_TransfersHistory", ThisKey="Id", OtherKey="FromId", DeleteRule="NO ACTION")]
	public EntitySet<TransfersHistory> TransfersHistory
	{
		get
		{
			return this._TransfersHistory;
		}
		set
		{
			this._TransfersHistory.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="fk_toClub", Storage="_ToClub", ThisKey="Id", OtherKey="ToId", DeleteRule="NO ACTION")]
	public EntitySet<TransfersHistory> ToClub
	{
		get
		{
			return this._ToClub;
		}
		set
		{
			this._ToClub.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="fk_winner", Storage="_CompetitionWinners", ThisKey="Id", OtherKey="IdWinner", DeleteRule="NO ACTION")]
	public EntitySet<CompetitionWinners> CompetitionWinners
	{
		get
		{
			return this._CompetitionWinners;
		}
		set
		{
			this._CompetitionWinners.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Player(Player entity)
	{
		this.SendPropertyChanging();
		entity.FootballClub = this;
	}
	
	private void detach_Player(Player entity)
	{
		this.SendPropertyChanging();
		entity.FootballClub = null;
	}
	
	private void attach_TransfersHistory(TransfersHistory entity)
	{
		this.SendPropertyChanging();
		entity.FootballClub = this;
	}
	
	private void detach_TransfersHistory(TransfersHistory entity)
	{
		this.SendPropertyChanging();
		entity.FootballClub = null;
	}
	
	private void attach_ToClub(TransfersHistory entity)
	{
		this.SendPropertyChanging();
		entity.ToClub = this;
	}
	
	private void detach_ToClub(TransfersHistory entity)
	{
		this.SendPropertyChanging();
		entity.ToClub = null;
	}
	
	private void attach_CompetitionWinners(CompetitionWinners entity)
	{
		this.SendPropertyChanging();
		entity.FootballClub = this;
	}
	
	private void detach_CompetitionWinners(CompetitionWinners entity)
	{
		this.SendPropertyChanging();
		entity.FootballClub = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Infirmary")]
public partial class Infirmary
{
	
	private int _Id;
	
	private string _Fname;
	
	private string _Lname;
	
	private string _Position;
	
	private System.DateTime _DateFrom;
	
	private System.Nullable<System.DateTime> _DateTo;
	
	private string _Description;
	
	public Infirmary()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id", Storage="_Id", DbType="Int NOT NULL")]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this._Id = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fname", Storage="_Fname", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string Fname
	{
		get
		{
			return this._Fname;
		}
		set
		{
			if ((this._Fname != value))
			{
				this._Fname = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="lname", Storage="_Lname", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string Lname
	{
		get
		{
			return this._Lname;
		}
		set
		{
			if ((this._Lname != value))
			{
				this._Lname = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="position", Storage="_Position", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string Position
	{
		get
		{
			return this._Position;
		}
		set
		{
			if ((this._Position != value))
			{
				this._Position = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="dateFrom", Storage="_DateFrom", DbType="Date NOT NULL")]
	public System.DateTime DateFrom
	{
		get
		{
			return this._DateFrom;
		}
		set
		{
			if ((this._DateFrom != value))
			{
				this._DateFrom = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="dateTo", Storage="_DateTo", DbType="Date")]
	public System.Nullable<System.DateTime> DateTo
	{
		get
		{
			return this._DateTo;
		}
		set
		{
			if ((this._DateTo != value))
			{
				this._DateTo = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="description", Storage="_Description", DbType="NVarChar(100)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this._Description = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InjuryHistory")]
public partial class InjuryHistory : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _IdPlayer;
	
	private System.DateTime _DateFrom;
	
	private System.Nullable<System.DateTime> _DateTo;
	
	private string _Description;
	
	private EntityRef<Player> _Player;
	
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdPlayerChanging(int value);
    partial void OnIdPlayerChanged();
    partial void OnDateFromChanging(System.DateTime value);
    partial void OnDateFromChanged();
    partial void OnDateToChanging(System.Nullable<System.DateTime> value);
    partial void OnDateToChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
	
	public InjuryHistory()
	{
		this._Player = default(EntityRef<Player>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id", Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="idPlayer", Storage="_IdPlayer", DbType="Int NOT NULL")]
	public int IdPlayer
	{
		get
		{
			return this._IdPlayer;
		}
		set
		{
			if ((this._IdPlayer != value))
			{
				this.OnIdPlayerChanging(value);
				this.SendPropertyChanging();
				this._IdPlayer = value;
				this.SendPropertyChanged("IdPlayer");
				this.OnIdPlayerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="dateFrom", Storage="_DateFrom", DbType="Date NOT NULL")]
	public System.DateTime DateFrom
	{
		get
		{
			return this._DateFrom;
		}
		set
		{
			if ((this._DateFrom != value))
			{
				this.OnDateFromChanging(value);
				this.SendPropertyChanging();
				this._DateFrom = value;
				this.SendPropertyChanged("DateFrom");
				this.OnDateFromChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="dateTo", Storage="_DateTo", DbType="Date")]
	public System.Nullable<System.DateTime> DateTo
	{
		get
		{
			return this._DateTo;
		}
		set
		{
			if ((this._DateTo != value))
			{
				this.OnDateToChanging(value);
				this.SendPropertyChanging();
				this._DateTo = value;
				this.SendPropertyChanged("DateTo");
				this.OnDateToChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="description", Storage="_Description", DbType="NVarChar(100)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="fk_player4", Storage="_Player", ThisKey="IdPlayer", OtherKey="Id", IsForeignKey=true)]
	public Player Player
	{
		get
		{
			return this._Player.Entity;
		}
		set
		{
			Player previousValue = this._Player.Entity;
			if (((previousValue != value) 
						|| (this._Player.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Player.Entity = null;
					previousValue.InjuryHistory.Remove(this);
				}
				this._Player.Entity = value;
				if ((value != null))
				{
					value.InjuryHistory.Add(this);
					this._IdPlayer = value.Id;
				}
				else
				{
					this._IdPlayer = default(int);
				}
				this.SendPropertyChanged("Player");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Player")]
public partial class Player : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Fname;
	
	private string _Lname;
	
	private System.DateTime _Born;
	
	private string _Position;
	
	private int _IdCountry;
	
	private System.Nullable<int> _IdClub;
	
	private string _Img;
	
	private EntityRef<FootballClub> _FootballClub;
	
	private EntityRef<Country> _Country;
	
	private EntitySet<TransfersHistory> _TransfersHistory;
	
	private EntitySet<InjuryHistory> _InjuryHistory;
	
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFnameChanging(string value);
    partial void OnFnameChanged();
    partial void OnLnameChanging(string value);
    partial void OnLnameChanged();
    partial void OnBornChanging(System.DateTime value);
    partial void OnBornChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnIdCountryChanging(int value);
    partial void OnIdCountryChanged();
    partial void OnIdClubChanging(System.Nullable<int> value);
    partial void OnIdClubChanged();
    partial void OnImgChanging(string value);
    partial void OnImgChanged();
    #endregion
	
	public Player()
	{
		this._FootballClub = default(EntityRef<FootballClub>);
		this._Country = default(EntityRef<Country>);
		this._TransfersHistory = new EntitySet<TransfersHistory>(new Action<TransfersHistory>(this.attach_TransfersHistory), new Action<TransfersHistory>(this.detach_TransfersHistory));
		this._InjuryHistory = new EntitySet<InjuryHistory>(new Action<InjuryHistory>(this.attach_InjuryHistory), new Action<InjuryHistory>(this.detach_InjuryHistory));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id", Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fname", Storage="_Fname", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string Fname
	{
		get
		{
			return this._Fname;
		}
		set
		{
			if ((this._Fname != value))
			{
				this.OnFnameChanging(value);
				this.SendPropertyChanging();
				this._Fname = value;
				this.SendPropertyChanged("Fname");
				this.OnFnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="lname", Storage="_Lname", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string Lname
	{
		get
		{
			return this._Lname;
		}
		set
		{
			if ((this._Lname != value))
			{
				this.OnLnameChanging(value);
				this.SendPropertyChanging();
				this._Lname = value;
				this.SendPropertyChanged("Lname");
				this.OnLnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="born", Storage="_Born", DbType="Date NOT NULL")]
	public System.DateTime Born
	{
		get
		{
			return this._Born;
		}
		set
		{
			if ((this._Born != value))
			{
				this.OnBornChanging(value);
				this.SendPropertyChanging();
				this._Born = value;
				this.SendPropertyChanged("Born");
				this.OnBornChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="position", Storage="_Position", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string Position
	{
		get
		{
			return this._Position;
		}
		set
		{
			if ((this._Position != value))
			{
				this.OnPositionChanging(value);
				this.SendPropertyChanging();
				this._Position = value;
				this.SendPropertyChanged("Position");
				this.OnPositionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="idCountry", Storage="_IdCountry", DbType="Int NOT NULL")]
	public int IdCountry
	{
		get
		{
			return this._IdCountry;
		}
		set
		{
			if ((this._IdCountry != value))
			{
				this.OnIdCountryChanging(value);
				this.SendPropertyChanging();
				this._IdCountry = value;
				this.SendPropertyChanged("IdCountry");
				this.OnIdCountryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="idClub", Storage="_IdClub", DbType="Int")]
	public System.Nullable<int> IdClub
	{
		get
		{
			return this._IdClub;
		}
		set
		{
			if ((this._IdClub != value))
			{
				this.OnIdClubChanging(value);
				this.SendPropertyChanging();
				this._IdClub = value;
				this.SendPropertyChanged("IdClub");
				this.OnIdClubChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="img", Storage="_Img", DbType="NVarChar(100)")]
	public string Img
	{
		get
		{
			return this._Img;
		}
		set
		{
			if ((this._Img != value))
			{
				this.OnImgChanging(value);
				this.SendPropertyChanging();
				this._Img = value;
				this.SendPropertyChanged("Img");
				this.OnImgChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="fk_club", Storage="_FootballClub", ThisKey="IdClub", OtherKey="Id", IsForeignKey=true)]
	public FootballClub FootballClub
	{
		get
		{
			return this._FootballClub.Entity;
		}
		set
		{
			FootballClub previousValue = this._FootballClub.Entity;
			if (((previousValue != value) 
						|| (this._FootballClub.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._FootballClub.Entity = null;
					previousValue.Player.Remove(this);
				}
				this._FootballClub.Entity = value;
				if ((value != null))
				{
					value.Player.Add(this);
					this._IdClub = value.Id;
				}
				else
				{
					this._IdClub = default(Nullable<int>);
				}
				this.SendPropertyChanged("FootballClub");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="fk_country", Storage="_Country", ThisKey="IdCountry", OtherKey="Id", IsForeignKey=true)]
	public Country Country
	{
		get
		{
			return this._Country.Entity;
		}
		set
		{
			Country previousValue = this._Country.Entity;
			if (((previousValue != value) 
						|| (this._Country.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Country.Entity = null;
					previousValue.Player.Remove(this);
				}
				this._Country.Entity = value;
				if ((value != null))
				{
					value.Player.Add(this);
					this._IdCountry = value.Id;
				}
				else
				{
					this._IdCountry = default(int);
				}
				this.SendPropertyChanged("Country");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="fk_player3", Storage="_TransfersHistory", ThisKey="Id", OtherKey="PlayerId", DeleteRule="NO ACTION")]
	public EntitySet<TransfersHistory> TransfersHistory
	{
		get
		{
			return this._TransfersHistory;
		}
		set
		{
			this._TransfersHistory.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="fk_player4", Storage="_InjuryHistory", ThisKey="Id", OtherKey="IdPlayer", DeleteRule="NO ACTION")]
	public EntitySet<InjuryHistory> InjuryHistory
	{
		get
		{
			return this._InjuryHistory;
		}
		set
		{
			this._InjuryHistory.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TransfersHistory(TransfersHistory entity)
	{
		this.SendPropertyChanging();
		entity.Player = this;
	}
	
	private void detach_TransfersHistory(TransfersHistory entity)
	{
		this.SendPropertyChanging();
		entity.Player = null;
	}
	
	private void attach_InjuryHistory(InjuryHistory entity)
	{
		this.SendPropertyChanging();
		entity.Player = this;
	}
	
	private void detach_InjuryHistory(InjuryHistory entity)
	{
		this.SendPropertyChanging();
		entity.Player = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TransfersHistory")]
public partial class TransfersHistory : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private System.Nullable<int> _FromId;
	
	private int _ToId;
	
	private int _PlayerId;
	
	private System.DateTime _TransferDate;
	
	private decimal _Price;
	
	private EntityRef<FootballClub> _FootballClub;
	
	private EntityRef<Player> _Player;
	
	private EntityRef<FootballClub> _ToClub;
	
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFromIdChanging(System.Nullable<int> value);
    partial void OnFromIdChanged();
    partial void OnToIdChanging(int value);
    partial void OnToIdChanged();
    partial void OnPlayerIdChanging(int value);
    partial void OnPlayerIdChanged();
    partial void OnTransferDateChanging(System.DateTime value);
    partial void OnTransferDateChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    #endregion
	
	public TransfersHistory()
	{
		this._FootballClub = default(EntityRef<FootballClub>);
		this._Player = default(EntityRef<Player>);
		this._ToClub = default(EntityRef<FootballClub>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id", Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fromId", Storage="_FromId", DbType="Int")]
	public System.Nullable<int> FromId
	{
		get
		{
			return this._FromId;
		}
		set
		{
			if ((this._FromId != value))
			{
				this.OnFromIdChanging(value);
				this.SendPropertyChanging();
				this._FromId = value;
				this.SendPropertyChanged("FromId");
				this.OnFromIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="toId", Storage="_ToId", DbType="Int NOT NULL")]
	public int ToId
	{
		get
		{
			return this._ToId;
		}
		set
		{
			if ((this._ToId != value))
			{
				this.OnToIdChanging(value);
				this.SendPropertyChanging();
				this._ToId = value;
				this.SendPropertyChanged("ToId");
				this.OnToIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="playerId", Storage="_PlayerId", DbType="Int NOT NULL")]
	public int PlayerId
	{
		get
		{
			return this._PlayerId;
		}
		set
		{
			if ((this._PlayerId != value))
			{
				this.OnPlayerIdChanging(value);
				this.SendPropertyChanging();
				this._PlayerId = value;
				this.SendPropertyChanged("PlayerId");
				this.OnPlayerIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="transferDate", Storage="_TransferDate", DbType="Date NOT NULL")]
	public System.DateTime TransferDate
	{
		get
		{
			return this._TransferDate;
		}
		set
		{
			if ((this._TransferDate != value))
			{
				this.OnTransferDateChanging(value);
				this.SendPropertyChanging();
				this._TransferDate = value;
				this.SendPropertyChanged("TransferDate");
				this.OnTransferDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="price", Storage="_Price", DbType="Money NOT NULL")]
	public decimal Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this.OnPriceChanging(value);
				this.SendPropertyChanging();
				this._Price = value;
				this.SendPropertyChanged("Price");
				this.OnPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="fk_fromClub", Storage="_FootballClub", ThisKey="FromId", OtherKey="Id", IsForeignKey=true)]
	public FootballClub FootballClub
	{
		get
		{
			return this._FootballClub.Entity;
		}
		set
		{
			FootballClub previousValue = this._FootballClub.Entity;
			if (((previousValue != value) 
						|| (this._FootballClub.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._FootballClub.Entity = null;
					previousValue.TransfersHistory.Remove(this);
				}
				this._FootballClub.Entity = value;
				if ((value != null))
				{
					value.TransfersHistory.Add(this);
					this._FromId = value.Id;
				}
				else
				{
					this._FromId = default(Nullable<int>);
				}
				this.SendPropertyChanged("FootballClub");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="fk_player3", Storage="_Player", ThisKey="PlayerId", OtherKey="Id", IsForeignKey=true)]
	public Player Player
	{
		get
		{
			return this._Player.Entity;
		}
		set
		{
			Player previousValue = this._Player.Entity;
			if (((previousValue != value) 
						|| (this._Player.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Player.Entity = null;
					previousValue.TransfersHistory.Remove(this);
				}
				this._Player.Entity = value;
				if ((value != null))
				{
					value.TransfersHistory.Add(this);
					this._PlayerId = value.Id;
				}
				else
				{
					this._PlayerId = default(int);
				}
				this.SendPropertyChanged("Player");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="fk_toClub", Storage="_ToClub", ThisKey="ToId", OtherKey="Id", IsForeignKey=true)]
	public FootballClub ToClub
	{
		get
		{
			return this._ToClub.Entity;
		}
		set
		{
			FootballClub previousValue = this._ToClub.Entity;
			if (((previousValue != value) 
						|| (this._ToClub.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ToClub.Entity = null;
					previousValue.ToClub.Remove(this);
				}
				this._ToClub.Entity = value;
				if ((value != null))
				{
					value.ToClub.Add(this);
					this._ToId = value.Id;
				}
				else
				{
					this._ToId = default(int);
				}
				this.SendPropertyChanged("ToClub");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class Fn_footballTeamResult
{
	
	private string _Fname;
	
	private string _Lname;
	
	private System.Nullable<System.DateTime> _Born;
	
	private string _Position;
	
	public Fn_footballTeamResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fname", Storage="_Fname", DbType="NVarChar(100)")]
	public string Fname
	{
		get
		{
			return this._Fname;
		}
		set
		{
			if ((this._Fname != value))
			{
				this._Fname = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="lname", Storage="_Lname", DbType="NVarChar(100)")]
	public string Lname
	{
		get
		{
			return this._Lname;
		}
		set
		{
			if ((this._Lname != value))
			{
				this._Lname = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="born", Storage="_Born", DbType="Date")]
	public System.Nullable<System.DateTime> Born
	{
		get
		{
			return this._Born;
		}
		set
		{
			if ((this._Born != value))
			{
				this._Born = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="position", Storage="_Position", DbType="NVarChar(100)")]
	public string Position
	{
		get
		{
			return this._Position;
		}
		set
		{
			if ((this._Position != value))
			{
				this._Position = value;
			}
		}
	}
}
#pragma warning restore 1591
